// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// Represents a genre in the system
model Genre {
  id        String   @id @default(uuid())
  name      String   @unique @db.VarChar(100)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  /// One-to-many relationship with books.
  books     Book[]

  @@map("genres")
}

/// Represents a book in the system
model Book {
  id          String   @id @default(uuid())
  title       String   @db.VarChar(255)
  author      String   @db.VarChar(255)
  genreId     String
  /// Foreign key constraint the one-to-many relationship between Genre and Book.
  genre       Genre    @relation(fields: [genreId], references: [id])
  price       Decimal  @db.Decimal(10, 2)
  description String?  @db.VarChar(1000)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([title, author])
  @@index([genreId])
  @@map("books")
}

/// Represents a user in the system
model User {
  id        String   @id @default(uuid())
  email     String   @unique @db.VarChar(255)
  password  String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}
